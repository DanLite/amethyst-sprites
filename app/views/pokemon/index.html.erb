<div>
  <h3>Artists</h3>
  <%= @newest_artists.map{|a| style_artist_name(a, true)}.join(", ").html_safe %><%= ", and #{pluralize @remaining_artists, 'other'}" if @remaining_artists > 0 %></p>
</div>

<div id="activity-feed-header">
  <h3>Latest Activity <%= link_to "view all", activities_path, :class => 'btn btn-mini' %></h3>
</div>
<div class="row">
<div id="activity-feed-container">
  <div id="activity-feed">
    <% 0.upto(@latest_activities.count / 3) do |i| %>
      <% activities = @latest_activities[i * 3, 3] %>
      <% if activities.count > 0 %>
        <div class="row">
        <% activities.each do |activity| %>
          <%= render :partial => "activities/activity", :locals => {:activity => activity, :small => true} %>
        <% end %>
        </div>
      <% end %>
    <% end %>
  </div>
</div>
</div>

<div class="row">
  <div id="gallery">
    <table>
    <%= render :partial => "pokemon", :collection => @pokemon, :locals => { :number_of_entries => @pokemon.count } %>
    </table>
  </div>
</div>

<script type="text/javascript">
<% if Rails.env.development? %>

  // Enable pusher logging - don't include this in production
  Pusher.log = function(message) {
    if (window.console && window.console.log) window.console.log(message);
  };
  
  // Flash fallback logging - don't include this in production
  WEB_SOCKET_DEBUG = true;
  
<% end %>

  var pusher = new Pusher('<%= Pusher.key %>');
  var channel = pusher.subscribe('<%= ACTIVITY_CHANNEL %>');
  
  var eventCallback = function(data) {
    return; // since activities are put 3 to a div.row, this will no longer display new activities properly
    
    var contentElement = $(data.content)
    contentElement.hide().prependTo('#activity-feed')
    contentElement.fadeToggle();
  };
  
  // bind_all doesn't seem to do what I want, so here I'll specify and bind to each event type manually
  var events = [<%= [UploadActivity, ProgressActivity, CommentActivity].map{|c| "'#{c.to_s}'"}.join(', ') %>];
  $(events).each(function(i, eventName){
    channel.bind(eventName, eventCallback);
  });
  
<% if current_artist %>
  $(document).ready(function() {
    $('.series-notempty').each(function(i, el) {
      var series = $(el);
      var seriesID = series.attr('id').split('_')[1];
      
      var flagDiv = $('<div class="flag inactive"></div>');
      
<% if current_artist.admin %>
      flagDiv.tooltip({'title': 'Flag sprite for tweak or redo'});
      
      flagDiv.click(function() {
        $.ajax('/series/' + seriesID + '/change_flag',
          {
            'type': 'POST',
            'context': $(this),
            'success': function(data) {
              var flag = parseInt($.trim(data));
              if (flag == 1) {
                $(this).removeClass('inactive').removeClass('redo').addClass('tweak');
              } else if (flag == 2) {
                $(this).removeClass('inactive').removeClass('tweak').addClass('redo');
              } else {
                $(this).removeClass('tweak').removeClass('redo').addClass('inactive');
              }
            }
          }
        );
      });
<% else %>
      flagDiv.tooltip({'title': 'Indicates whether sprite needs tweak or redo'})
<% end %>
      
      series.prepend(flagDiv);
      series.children('.pokemon-sprite').css('margin-top', '-36px');
    });
          
    $.get('/series/flagged.json', null, function(data) {
      $.each(data, function (seriesID, flag) {
        $('#series_' + seriesID + ' .flag').removeClass('inactive').addClass(flag == 1 ? 'tweak' : 'redo');
      });
    });
  });
<% end %>
</script>