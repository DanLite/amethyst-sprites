<div>

<div style="margin: 10px 0">
  <p><strong>Newest artists: </strong>
  <%= @newest_artists.map{|a| style_artist_name(a)}.join(", ").html_safe %><%= ", and #{@remaining_artists} others" if @remaining_artists > 0 %></p>
</div>

<div id="show-feed-button" style="float: right;">
  <%= link_to_function "Show activity", "toggleActivityFeed()" %>
</div>

<div id="activity-feed-container" style="float: right; width: 450px; display: none">
  <div id="activity-feed-header" style="text-align: center; font-weight: bold; font-size: 120%">Latest Activity <%= link_to_function "(hide)", "toggleActivityFeed()" %><hr width="75%" /></div>
  <div id="activity-feed">
    <% @latest_activities.each do |activity| %>
    <%= render :partial => "activities/activity", :locals => {:activity => activity} %>
    <% end %>
    <% if @older_activity_count > 0 %>
    <div class="activity-feed-item" style="width: 100%; text-align: center"><%= link_to "View all activity", activities_path %></div>
    <% end %>
  </div>
</div>
<div id="gallery" style="padding-right: 100px">
  <%= render :partial => "pokemon", :collection => @pokemon, :locals => { :number_of_entries => @pokemon.count } %>
  <div style="clear: both"></div>
</div>

</div>

<script type="text/javascript">
<% if Rails.env.development? %>

  // Enable pusher logging - don't include this in production
  Pusher.log = function(message) {
    if (window.console && window.console.log) window.console.log(message);
  };
  
  // Flash fallback logging - don't include this in production
  WEB_SOCKET_DEBUG = true;
  
<% end %>

  var pusher = new Pusher('<%= Pusher.key %>');
  var channel = pusher.subscribe('<%= Activity::ACTIVITY_CHANNEL %>');
  
  var eventCallback = function(data) {
    var contentElement = $(data.content)
    contentElement.hide().prependTo('#activity-feed')
    contentElement.slideToggle();
  };
  
  // bind_all doesn't seem to do what I want, so here I'll specify and bind to each event type manually
  var events = [<%= [UploadActivity, ProgressActivity, CommentActivity].map{|c| "'#{c.to_s}'"}.join(', ') %>];
  $(events).each(function(i, eventName){
    channel.bind(eventName, eventCallback);
  });
  
  function toggleActivityFeed() {
    var feedContainer = $('#activity-feed-container');
    var showing = (feedContainer.css('display') == 'none');
    
    $('#show-feed-button').toggle('fast');
    
    feedContainer.toggle('fast', function(){
      var padding = showing ? '500px' : '100px';
      var gallery = $('#gallery');
      gallery.css('padding-right', padding);
    });
    
  }
  
  $(document).ready(function() {
    // Show activity feed by default only in large browswer windows
    if ($(window).width() >= 1200 && $('#activity-feed-container').css('display') == 'none') {
      toggleActivityFeed();
    }
  });
</script>